---
- name: Apt source
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - "{{ systools_apt_sources }}"

- name: Apt key
  apt_key:
    url: "{{ item }}"
  with_items:
    - "{{ systools_apt_keys }}"
  register: systools_apt_repo_result

- name: Update apt-key
  command: apt-key update
  become: true

- name: Update apt cache if repo or key added.
  apt:
    update_cache: yes
  when: systools_apt_repo_result.changed or systools_apt_repo_result.changed

- name: Remove packages
  apt:
    name: "{{ item }}"
    state: absent
    purge: yes
  with_items:
    - "{{ systools_packages_purge }}"

- name: Install systools packages
  apt:
    name: "{{ item }}"
    state: installed
    update_cache: yes
  with_items:
    - "{{ systools_packages }}"

- name: Install additional packages
  apt:
    name: "{{ item }}"
    state: installed
    update_cache: yes
    force: yes
  with_items:
    - "{{ systools_packages_additional }}"

- name: Install additional jessie-backports packages
  apt:
    name: "{{ item }}"
    state: installed
    default_release: jessie-backports
    install_recommends: yes
    force: yes
  with_items:
    - "{{ systools_packages_additional_backports_jessie }}"

- name: Bash global aliases
  lineinfile:
    dest: "{{ systools_bash_aliases_path }}"
    create: yes
    mode: 0644
    line: 'alias {{ item.alias }}="{{ item.command }}"'
    regexp: "^alias {{ item.alias }}="
  with_items:
    - "{{ systools_bash_aliases }}"
  when: systools_bash_aliases != false

- name: Cronjobs
  cron: name="{{ item.name }}"
        minute="{{ item.minute }}"
        hour="{{item.hour}}"
        job="{{ item.job }}"
        state="{{ item.state }}"
        user="{{ item.user }}"
  with_items:
    - "{{ systools_cronjobs }}"
  when: systools_cronjobs != false

- name: Environment settings
  lineinfile:
    dest: /etc/environment
    line: "{{ systools_lc_all }}"
    regexp: "^LC_ALL"
    state: present

- name: GIT global configuration
  template:
    src: gitconfig.j2
    dest: "{{ systools_git_configfile }}"
    group: root
    owner: root
    mode: 0644
  when: systools_git_configfile != false

- name: History store immediatly with formatted time
  lineinfile:
    dest: /etc/bash.bashrc
    line: "{{ item }}"
    regexp: "^{{ item }}"
  with_items:
    - "{{ systools_history }}"

- name: Set authorized_keys for users
  authorized_key:
    exclusive: "{{ item.exclusive }}"
    key: "{{ item.key }}"
    state: present
    user: "{{ item.user }}"
    validate_certs: False
  with_items:
    - "{{ authorized_keys }}"
  when: authorized_keys != false

